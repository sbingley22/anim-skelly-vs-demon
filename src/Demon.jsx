/* eslint-disable react/prop-types */
/* eslint-disable react/no-unknown-property */
/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 public/demon.glb -s -T 
Files: public/demon.glb [6.48MB] > D:\Web_Projects\Websites\_Anim\anim-skelly-vs-demon\demon-transformed.glb [1.17MB] (82%)
*/

import React, { useEffect, useRef, useState } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'

export function Model(props) {
  const group = useRef()
  const { nodes, materials, animations } = useGLTF('/demon-transformed.glb')
  const { actions } = useAnimations(animations, group)
  const [currentAnim, setCurrentAnim] = useState(1)

  useEffect(()=>{
    const playAnim = () => {
      actions["s" + currentAnim].fadeOut(0.5)
      actions["s" + props.anim].reset().fadeIn(0.5).play()
      setCurrentAnim(props.anim)
    }
    playAnim()
  },[props.anim])

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="rig">
          <primitive object={nodes.root} />
          <primitive object={nodes['MCH-torsoparent']} />
          <primitive object={nodes['MCH-hand_ikparentL']} />
          <primitive object={nodes['MCH-upper_arm_ik_targetparentL']} />
          <primitive object={nodes['MCH-hand_ikparentR']} />
          <primitive object={nodes['MCH-upper_arm_ik_targetparentR']} />
          <primitive object={nodes['MCH-foot_ikparentL']} />
          <primitive object={nodes['MCH-thigh_ik_targetparentL']} />
          <primitive object={nodes['MCH-foot_ikparentR']} />
          <primitive object={nodes['MCH-thigh_ik_targetparentR']} />
        </group>
        <primitive object={nodes.neutral_bone} />
        <skinnedMesh 
        name="DemonBody" 
        geometry={nodes.DemonBody.geometry} 
        material={materials['base_material.002']} 
        skeleton={nodes.DemonBody.skeleton} 
        castShadow
        receiveShadow
        />
      </group>
    </group>
  )
}

useGLTF.preload('/demon-transformed.glb')
